"""separated PeSession and AcademicSession from StudentSession

Revision ID: bb577390b438
Revises: 12b3f2d6cdd0
Create Date: 2025-07-21 14:26:54.364481

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'bb577390b438'
down_revision = '12b3f2d6cdd0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('student_sessions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_student_sessions_category'))
        batch_op.drop_index(batch_op.f('ix_student_sessions_physical_education'))
        batch_op.drop_index(batch_op.f('ix_student_sessions_term'))

    op.drop_table('student_sessions')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('student_sessions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('session_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('duration_hours', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('photo', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('outcomes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('category', postgresql.ENUM('pr', 'ww', 'un', 'pe', name='categoryenum'), autoincrement=False, nullable=False),
    sa.Column('physical_education', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('term', postgresql.ENUM('term1', 'term2', 'term3', name='termenum'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name=op.f('student_sessions_student_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('student_sessions_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('student_sessions_pkey'))
    )
    with op.batch_alter_table('student_sessions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_student_sessions_term'), ['term'], unique=False)
        batch_op.create_index(batch_op.f('ix_student_sessions_physical_education'), ['physical_education'], unique=False)
        batch_op.create_index(batch_op.f('ix_student_sessions_category'), ['category'], unique=False)

    # ### end Alembic commands ###
